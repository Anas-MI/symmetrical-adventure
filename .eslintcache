[{"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/index.js":"1","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/App.js":"2","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/reportWebVitals.js":"3","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/utils/stripe.js":"4","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/formCard.js":"5","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/resources/api.js":"6","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/Navbar.js":"7","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/assets/Icons/CustomIcons.js":"8","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/ShoppingCard.js":"9","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/DeliveryCard.js":"10","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/InfoPage.js":"11","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/PaymentCard.js":"12"},{"size":363,"mtime":1611993844846,"results":"13","hashOfConfig":"14"},{"size":2311,"mtime":1612019759765,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611993844847,"results":"16","hashOfConfig":"14"},{"size":1251,"mtime":1611993844849,"results":"17","hashOfConfig":"14"},{"size":6873,"mtime":1612018499646,"results":"18","hashOfConfig":"14"},{"size":327,"mtime":1611993844847,"results":"19","hashOfConfig":"14"},{"size":1791,"mtime":1612009227242,"results":"20","hashOfConfig":"14"},{"size":11186,"mtime":1612021938345,"results":"21","hashOfConfig":"14"},{"size":2533,"mtime":1612025565251,"results":"22","hashOfConfig":"14"},{"size":2063,"mtime":1612003840159,"results":"23","hashOfConfig":"14"},{"size":3334,"mtime":1612025045985,"results":"24","hashOfConfig":"14"},{"size":5072,"mtime":1612026378631,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9acjls",{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/index.js",[],["54","55"],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/App.js",["56","57","58","59"],"import React, { useEffect, useState } from 'react';\nimport logo1 from './assets/img/logo1.png';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport FormCard from './components/formCard';\nimport ShoppingCard from './components/ShoppingCard';\nimport PaymentCard from './components/PaymentCard';\nimport DeliveryCard from './components/DeliveryCard';\nimport InfoPage from './components/InfoPage';\nimport { getAPIkeys } from './utils/stripe';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Navbar from './components/Navbar';\nimport { Card } from 'antd';\n\nconst App = () => {\n  const [stripePromise, setstripePromise] = useState(\n    loadStripe('pk_test_1XPhRvBHCislCDxFaYm3HR97')\n  );\n\n  const [config, setconfig] = useState({\n    publishableKey: 'pk_test_1XPhRvBHCislCDxFaYm3HR97',\n    productID: '',\n    priceID: '',\n    PreOrderPriceId: '',\n  });\n\n  const getConfigKeys = async () => {\n    const result = await getAPIkeys();\n    if (result) {\n      setconfig(result);\n      setstripePromise(loadStripe(result.publishableKey));\n    }\n  };\n\n  useEffect(() => {\n    getConfigKeys();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <div className=\"c-checkout row\">\n        <div className=\"c-checkout__left-side col-6\">\n          <InfoPage />\n        </div>\n        <div className=\"c-checkout__right-side  col-6\">\n          <ShoppingCard />\n          <Card\n            title={<div className=\"c-card__title\">Rider Info</div>}\n            bordered={false}\n            className=\"c-card border-0\"\n          >\n            <div className=\"pb-3\">\n              <div className=\"row c-card__input \">\n                <div className=\"col-6\">\n                  <input className=\"c-input\" placeholder=\"Email\" />\n                </div>\n                <div className=\"col-6\">\n                  <input className=\"c-input\" placeholder=\"Zip Code\" />\n                </div>\n              </div>\n            </div>\n          </Card>\n          <Elements stripe={stripePromise}>\n            <PaymentCard config={config} />\n          </Elements>\n          {/* \n          <Elements stripe={stripePromise}>\n            <FormCard config={config} />\n          </Elements> */}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/reportWebVitals.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/utils/stripe.js",["60","61","62"],"\nimport api from '../resources/api';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { message, notification } from 'antd';\n\nexport const getAPIkeys = async () => {\n  const result = await api.get(`/stripe/setup`)\n  return result.data\n}\n\nexport const stripePromise = async () => {\n  const res = await getAPIkeys()\n  if (res.data) {\n    const { publishableKey } = res.data\n    return loadStripe('pk_test_1XPhRvBHCislCDxFaYm3HR97')\n  }\n  loadStripe('pk_test_1XPhRvBHCislCDxFaYm3HR97')\n};\n\n\nexport const handleSubmitPayment = async (paymentMethods, payload, config) => {\n  const { stripe, customerID } = payload\n  if (!config || !stripe) {\n    return;\n  }\n  try {\n    const { error, paymentMethod } = await stripe.createPaymentMethod(paymentMethods);\n    if (error || !paymentMethod) {\n      notification.error({ message: error?.message || 'Something is not right...' })\n      throw Error(error?.message || 'Something is not right...');\n    }\n    const paymentID = paymentMethod.id;\n    notification.success({ message: 'Payment successfull' })\n    return paymentID\n  } catch (error) {\n    notification.error({ message: 'Something went wrong' })\n    // message.error(error.message())\n    // Let the user know that something went wrong here...\n  }\n};","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/formCard.js",["63","64","65","66","67","68"],"import React, { useState, useEffect } from 'react';\nimport payment from '../assets/img/payment.jpg';\nimport cvc from '../assets/img/cvc.png';\nimport yourhandle from 'countrycitystatejson';\nimport { AppleFilled } from '@ant-design/icons';\nimport {\n  Button,\n  Divider,\n  Form,\n  Input,\n  Select,\n  message,\n  notification,\n} from 'antd';\nimport InputMask from 'react-input-mask';\nimport api from '../resources/api';\nimport { getConfig } from '@testing-library/react';\nimport { handleSubmitPayment, getAPIkeys } from '../utils/stripe';\nimport {\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n  Elements,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\nimport { Spin } from 'antd';\nconst { Option } = Select;\n\nconst FormCard = ({ config }) => {\n  const [loading, setloading] = useState(false);\n  const [state, setState] = useState({\n    countryArray: [],\n  });\n\n  const elements = useElements();\n  const stripe = useStripe();\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  const getCountries = () => {\n    setState({\n      countryArray: yourhandle.getCountries(),\n    });\n  };\n\n  const handleSubmit = (values) => {\n    const payload = {\n      email: values.email,\n      name: values.name,\n    };\n    setloading(true);\n    api\n      .post(`/stripe/customer`, payload)\n      .then(async function (res) {\n        const _paymentMethod = {\n          type: 'card',\n          card: elements.getElement(CardNumberElement),\n          billing_details: {\n            name: values.name,\n          },\n        };\n        const { customerID } = res.data;\n        const _payload = {\n          customerID: customerID,\n          stripe: stripe,\n        };\n        const paymentID = await handleSubmitPayment(\n          _paymentMethod,\n          _payload,\n          config\n        );\n\n        const _finalpayload = {\n          customerID,\n          paymentID,\n        };\n\n        api\n          .post(`/stripe/subscription`, _finalpayload)\n          .then((res) => {\n            setloading(false);\n            console.log(res);\n          })\n          .catch((err) => {\n            setloading(false);\n            notification.error({ message: 'Something went wrong' });\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        // console.log(err.response.data.message)\n        setloading(false);\n        notification.error({\n          message:\n            err.response.data && err.response.data.message\n              ? err.response.data.message\n              : 'Something went wrong',\n        });\n        console.log(err);\n      });\n  };\n\n  const cardSuffix = <img src={payment} width=\"110\" alt=\"payment\" />;\n\n  const cvcSuffix = (\n    <img src={cvc} width=\"22px\" style={{ marginRight: '-8px' }} alt=\"cvc\" />\n  );\n\n  return (\n    <Spin spinning={loading} size={'large'}>\n      <div className=\"form-card\">\n        <Button className=\"apple-btn\" block>\n          <AppleFilled /> Pay\n        </Button>\n        <Divider plain style={{ color: '#ACACAC' }}>\n          Or pay with card\n        </Divider>\n        <Form onFinish={handleSubmit} layout=\"vertical\">\n          <Form.Item\n            name=\"email\"\n            label=\"Email\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter valid email address',\n                type: 'email',\n              },\n            ]}\n          >\n            <Input type=\"email\" name=\"email\" />\n          </Form.Item>\n\n          <p>Card information</p>\n          <CardNumberElement className=\"element border\" />\n          <CardExpiryElement className=\"element border\" />\n          <CardCvcElement className=\"element border\" />\n          {/* <Form.Item label=\"Card information\">\n            <Input.Group compact>\n              <Form.Item\n                name=\"cardNo\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter valid 16 digit card number', len: 16 }]}\n              >\n                <Input data-stripe=\"number\" id=\"card-number-element\" name=\"card\" type=\"number\" placeholder=\"1234 1234 1234 1234\" suffix={cardSuffix} />\n              </Form.Item>\n              <Form.Item\n                name=\"expiry\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter card expiry date' }]}\n              >\n                <InputMask data-stripe=\"exp\"  id=\"card-expiry-element\" style={{ width: '50%', height: '32px', padding: '4px 11px' }} name=\"expiry\" mask=\"99/99\" maskChar=\" \" placeholder=\"MM/YY\" />\n              </Form.Item>\n              <Form.Item\n                name=\"CVC\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter CVC code' }]}\n              >\n                <Input data-stripe=\"cvc\"  type=\"password\" id=\"card-cvc-element\" maxLength=\"3\" style={{ width: '50%' }} name=\"CVC\" placeholder=\"CVC\" suffix={cvcSuffix} />\n              </Form.Item>\n            </Input.Group>\n          </Form.Item> */}\n\n          <Form.Item\n            name=\"name\"\n            label=\"Name on card\"\n            style={{ marginTop: '12px' }}\n            rules={[\n              {\n                required: true,\n                message: 'Please enter valid name',\n                pattern: /^[a-zA-Z ]*$/,\n              },\n            ]}\n          >\n            <Input name=\"name\" />\n          </Form.Item>\n\n          <Form.Item label=\"Country or region\">\n            <Input.Group compact>\n              <Form.Item\n                name=\"country\"\n                noStyle\n                rules={[\n                  { required: true, message: 'Please select your country' },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  name=\"country\"\n                  placeholder=\"Select country\"\n                >\n                  {state.countryArray &&\n                    state.countryArray.length > 0 &&\n                    state.countryArray.map((country, index) => (\n                      <Option key={index} value={country.name}>\n                        {country.name}\n                      </Option>\n                    ))}\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"zip\"\n                noStyle\n                rules={[\n                  { required: true, message: 'Please enter your zip code' },\n                ]}\n              >\n                <InputMask\n                  style={{ height: '32px', padding: '4px 11px' }}\n                  name=\"zip\"\n                  mask=\"999999\"\n                  maskChar=\" \"\n                  placeholder=\"ZIP\"\n                />\n              </Form.Item>\n            </Input.Group>\n          </Form.Item>\n\n          <Button className=\"pay-btn\" htmlType=\"submit\" block>\n            Pay $1.00\n          </Button>\n        </Form>\n      </div>\n    </Spin>\n  );\n};\n\nexport default FormCard;\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/resources/api.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/Navbar.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/assets/Icons/CustomIcons.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/ShoppingCard.js",["69"],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/DeliveryCard.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/InfoPage.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/PaymentCard.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"92","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":27},{"ruleId":"88","severity":1,"message":"93","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":16},{"ruleId":"88","severity":1,"message":"94","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":20},{"ruleId":"88","severity":1,"message":"95","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":17},{"ruleId":"88","severity":1,"message":"96","line":14,"column":13,"nodeType":"90","messageId":"91","endLine":14,"endColumn":27},{"ruleId":"88","severity":1,"message":"97","line":22,"column":19,"nodeType":"90","messageId":"91","endLine":22,"endColumn":29},{"ruleId":"88","severity":1,"message":"95","line":12,"column":3,"nodeType":"90","messageId":"91","endLine":12,"endColumn":10},{"ruleId":"88","severity":1,"message":"98","line":17,"column":10,"nodeType":"90","messageId":"91","endLine":17,"endColumn":19},{"ruleId":"88","severity":1,"message":"99","line":18,"column":31,"nodeType":"90","messageId":"91","endLine":18,"endColumn":41},{"ruleId":"88","severity":1,"message":"100","line":23,"column":3,"nodeType":"90","messageId":"91","endLine":23,"endColumn":11},{"ruleId":"88","severity":1,"message":"101","line":106,"column":9,"nodeType":"90","messageId":"91","endLine":106,"endColumn":19},{"ruleId":"88","severity":1,"message":"102","line":108,"column":9,"nodeType":"90","messageId":"91","endLine":108,"endColumn":18},{"ruleId":"88","severity":1,"message":"103","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":27},{"ruleId":"88","severity":1,"message":"104","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":15},{"ruleId":"88","severity":1,"message":"105","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":11},{"ruleId":"88","severity":1,"message":"106","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":21},{"ruleId":"88","severity":1,"message":"107","line":8,"column":3,"nodeType":"90","messageId":"91","endLine":8,"endColumn":9},{"ruleId":"88","severity":1,"message":"108","line":9,"column":3,"nodeType":"90","messageId":"91","endLine":9,"endColumn":10},{"ruleId":"88","severity":1,"message":"109","line":10,"column":3,"nodeType":"90","messageId":"91","endLine":10,"endColumn":7},{"ruleId":"88","severity":1,"message":"110","line":11,"column":3,"nodeType":"90","messageId":"91","endLine":11,"endColumn":8},{"ruleId":"88","severity":1,"message":"95","line":13,"column":3,"nodeType":"90","messageId":"91","endLine":13,"endColumn":10},{"ruleId":"88","severity":1,"message":"111","line":16,"column":8,"nodeType":"90","messageId":"91","endLine":16,"endColumn":17},{"ruleId":"88","severity":1,"message":"98","line":18,"column":10,"nodeType":"90","messageId":"91","endLine":18,"endColumn":19},{"ruleId":"88","severity":1,"message":"99","line":19,"column":31,"nodeType":"90","messageId":"91","endLine":19,"endColumn":41},{"ruleId":"88","severity":1,"message":"100","line":24,"column":3,"nodeType":"90","messageId":"91","endLine":24,"endColumn":11},{"ruleId":"88","severity":1,"message":"112","line":31,"column":9,"nodeType":"90","messageId":"91","endLine":31,"endColumn":15},{"ruleId":"88","severity":1,"message":"113","line":36,"column":10,"nodeType":"90","messageId":"91","endLine":36,"endColumn":15},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'logo1' is defined but never used.","Identifier","unusedVar","'ArrowLeftOutlined' is defined but never used.","'FormCard' is defined but never used.","'DeliveryCard' is defined but never used.","'message' is defined but never used.","'publishableKey' is assigned a value but never used.","'customerID' is assigned a value but never used.","'getConfig' is defined but never used.","'getAPIkeys' is defined but never used.","'Elements' is defined but never used.","'cardSuffix' is assigned a value but never used.","'cvcSuffix' is assigned a value but never used.","'ShoppingExtraIcon' is defined but never used.","'payment' is defined but never used.","'cvc' is defined but never used.","'AppleFilled' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'InputMask' is defined but never used.","'Option' is assigned a value but never used.","'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]