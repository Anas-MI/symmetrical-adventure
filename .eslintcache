[{"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/index.js":"1","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/App.js":"2","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/reportWebVitals.js":"3","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/formCard.js":"4","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/InfoPage.js":"5","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/PaymentCard.js":"6","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/utils/stripe.js":"7","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/DeliveryCard.js":"8","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/Navbar.js":"9","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/ShoppingCard.js":"10","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/resources/api.js":"11","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/assets/Icons/CustomIcons.js":"12"},{"size":363,"mtime":1611993844846,"results":"13","hashOfConfig":"14"},{"size":3966,"mtime":1613041685210,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611993844847,"results":"16","hashOfConfig":"14"},{"size":5858,"mtime":1612951163277,"results":"17","hashOfConfig":"14"},{"size":5465,"mtime":1613147717188,"results":"18","hashOfConfig":"14"},{"size":5194,"mtime":1613148574823,"results":"19","hashOfConfig":"14"},{"size":3201,"mtime":1613149584315,"results":"20","hashOfConfig":"14"},{"size":2063,"mtime":1612003840159,"results":"21","hashOfConfig":"14"},{"size":1791,"mtime":1612009227242,"results":"22","hashOfConfig":"14"},{"size":3935,"mtime":1612809476570,"results":"23","hashOfConfig":"14"},{"size":327,"mtime":1611993844847,"results":"24","hashOfConfig":"14"},{"size":13346,"mtime":1612617042427,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9acjls",{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/index.js",[],["56","57"],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/App.js",["58","59","60","61","62"],"import React, { useEffect, useState } from 'react';\nimport logo1 from './assets/img/logo1.png';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport FormCard from './components/formCard';\nimport ShoppingCard from './components/ShoppingCard';\nimport PaymentCard from './components/PaymentCard';\nimport DeliveryCard from './components/DeliveryCard';\nimport InfoPage from './components/InfoPage';\nimport { getAPIkeys } from './utils/stripe';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Navbar from './components/Navbar';\nimport { Card } from 'antd';\n\nconst App = () => {\n  const [stripePromise, setstripePromise] = useState(\n    loadStripe('pk_test_1XPhRvBHCislCDxFaYm3HR97')\n  );\n  const [stripeResponse, setStripeResponse] = useState(null);\n  const [email, setEmail] = useState('');\n  const [zipcode, setZipcode] = useState('');\n  const [showRight, setShowRight] = useState(false);\n  const [config, setconfig] = useState({\n    publishableKey: 'pk_test_1XPhRvBHCislCDxFaYm3HR97',\n    productId: '',\n    priceId: '',\n    PreOrderPriceId: '',\n  });\n\n  const getConfigKeys = async () => {\n    const result = await getAPIkeys();\n    if (result) {\n      setconfig(result);\n      setstripePromise(loadStripe(result.publishableKey));\n    }\n  };\n\n  useEffect(() => {\n    getConfigKeys();\n  }, []);\n\n  const rightSide1 = (\n    <div className={'transit'}>\n      <ShoppingCard />\n      <Card\n        title={<div className=\"c-card__title\">Rider Info</div>}\n        bordered={false}\n        className=\"c-card border-0\"\n      >\n        <div className=\"pb-3\">\n          <div className=\"row c-card__input \">\n            <div className=\"col-6\">\n              <input\n                className=\"c-input\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={email.email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            <div className=\"col-6\">\n              <input\n                name=\"zipcode\"\n                className=\"c-input\"\n                placeholder=\"Zip Code\"\n                value={zipcode}\n                onChange={(e) => setZipcode(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n      </Card>\n      <Elements stripe={stripePromise}>\n        <PaymentCard\n          config={config}\n          setStripeResponse={setStripeResponse}\n          email={email}\n          zipcode={zipcode}\n        />\n      </Elements>\n    </div>\n  );\n\n  const rightSide2 = (\n    <div\n      id=\"right-side-success\"\n      className=\" transit1 c-checkout__right-side-success \"\n    >\n      <div className=\"c-checkout__right-side-success-title\">\n        Your subscription has successfully processed!\n      </div>\n      <div className=\"c-checkout__right-side-success-subtitle\">What Next?</div>\n      <div className=\"c-checkout__right-side-success-content\">\n        1. Download the<a href=\"#app\"> Beyond iPhone app</a>\n      </div>\n      <div className=\"c-checkout__right-side-success-content\">\n        2. Check your email to begin your <a href=\"#on\"> onboarding</a>\n      </div>\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      {/* <Navbar /> */}\n      <div className=\"c-checkout row\">\n        <div className=\"c-checkout__left-side col-md-6 col-xs-12 \">\n          <InfoPage setShowRight={setShowRight} showRight={showRight} />\n        </div>\n        <div\n          className=\"c-checkout__right-side   col-md-6 col-xs-12 \"\n          id=\"right-side\"\n        >\n          <div className=\"mobile-view\">\n            {showRight && rightSide1}\n            {showRight && stripeResponse === 'success' && rightSide2}\n          </div>\n          <div className=\"web-view\">\n            {showRight && stripeResponse !== 'success' && rightSide1}\n            {showRight && stripeResponse === 'success' && rightSide2}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/reportWebVitals.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/formCard.js",["63","64","65","66","67","68","69","70"],"import React, { useState, useEffect } from 'react';\nimport payment from '../assets/img/payment.jpg';\nimport cvc from '../assets/img/cvc.png';\nimport yourhandle from 'countrycitystatejson';\nimport { AppleFilled } from '@ant-design/icons';\nimport {\n  Button,\n  Divider,\n  Form,\n  Input,\n  Select,\n  message,\n  notification,\n} from 'antd';\nimport InputMask from 'react-input-mask';\nimport api from '../resources/api';\nimport { getConfig } from '@testing-library/react';\nimport { handleSubmitPayment, getAPIkeys } from '../utils/stripe';\nimport {\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n  Elements,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\nimport { Spin } from 'antd';\nconst { Option } = Select;\n\nconst FormCard = ({ config }) => {\n  const [loading, setloading] = useState(false);\n  const [state, setState] = useState({\n    countryArray: [],\n  });\n\n  const elements = useElements();\n  const stripe = useStripe();\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  const getCountries = () => {\n    setState({\n      countryArray: yourhandle.getCountries(),\n    });\n  };\n\n  const handleSubmit = (values) => {\n    const payload = {\n      email: values.email,\n      name: values.name,\n      stripe: stripe\n    }\n    const _paymentMethod = {\n      type: 'card',\n      card: elements.getElement(CardNumberElement),\n      billing_details: {\n        name: values.name,\n      }\n    }\n    setloading(true)\n    handleSubmitPayment(\n      _paymentMethod,\n      payload,\n      config,\n      () => setloading(false)\n    )\n\n  }\n\n  const cardSuffix = (\n    <img src={payment} width=\"110\" alt=\"payment\" />\n  )\n\n  const cvcSuffix = (\n    <img src={cvc} width=\"22px\" style={{ marginRight: '-8px' }} alt=\"cvc\" />\n  );\n\n  return (\n    <Spin spinning={loading} size={'large'}>\n      <div className=\"form-card\">\n        <Button className=\"apple-btn\" block>\n          <AppleFilled /> Pay\n        </Button>\n        <Divider plain style={{ color: '#ACACAC' }}>\n          Or pay with card\n        </Divider>\n        <Form onFinish={handleSubmit} layout=\"vertical\">\n          <Form.Item\n            name=\"email\"\n            label=\"Email\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter valid email address',\n                type: 'email',\n              },\n            ]}\n          >\n            <Input type=\"email\" name=\"email\" />\n          </Form.Item>\n\n          <p>Card information</p>\n          <CardNumberElement className=\"element border\" />\n          <CardExpiryElement className=\"element border\" />\n          <CardCvcElement className=\"element border\" />\n          {/* <Form.Item label=\"Card information\">\n            <Input.Group compact>\n              <Form.Item\n                name=\"cardNo\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter valid 16 digit card number', len: 16 }]}\n              >\n                <Input data-stripe=\"number\" id=\"card-number-element\" name=\"card\" type=\"number\" placeholder=\"1234 1234 1234 1234\" suffix={cardSuffix} />\n              </Form.Item>\n              <Form.Item\n                name=\"expiry\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter card expiry date' }]}\n              >\n                <InputMask data-stripe=\"exp\"  id=\"card-expiry-element\" style={{ width: '50%', height: '32px', padding: '4px 11px' }} name=\"expiry\" mask=\"99/99\" maskChar=\" \" placeholder=\"MM/YY\" />\n              </Form.Item>\n              <Form.Item\n                name=\"CVC\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter CVC code' }]}\n              >\n                <Input data-stripe=\"cvc\"  type=\"password\" id=\"card-cvc-element\" maxLength=\"3\" style={{ width: '50%' }} name=\"CVC\" placeholder=\"CVC\" suffix={cvcSuffix} />\n              </Form.Item>\n            </Input.Group>\n          </Form.Item> */}\n\n          <Form.Item\n            name=\"name\"\n            label=\"Name on card\"\n            style={{ marginTop: '12px' }}\n            rules={[\n              {\n                required: true,\n                message: 'Please enter valid name',\n                pattern: /^[a-zA-Z ]*$/,\n              },\n            ]}\n          >\n            <Input name=\"name\" />\n          </Form.Item>\n\n          <Form.Item label=\"Country or region\">\n            <Input.Group compact>\n              <Form.Item\n                name=\"country\"\n                noStyle\n                rules={[\n                  { required: true, message: 'Please select your country' },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  name=\"country\"\n                  placeholder=\"Select country\"\n                >\n                  {state.countryArray &&\n                    state.countryArray.length > 0 &&\n                    state.countryArray.map((country, index) => (\n                      <Option key={index} value={country.name}>\n                        {country.name}\n                      </Option>\n                    ))}\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"zip\"\n                noStyle\n                rules={[\n                  { required: true, message: 'Please enter your zip code' },\n                ]}\n              >\n                <InputMask\n                  style={{ height: '32px', padding: '4px 11px' }}\n                  name=\"zip\"\n                  mask=\"999999\"\n                  maskChar=\" \"\n                  placeholder=\"ZIP\"\n                />\n              </Form.Item>\n            </Input.Group>\n          </Form.Item>\n\n          <Button className=\"pay-btn\" htmlType=\"submit\" block>\n            Pay $1.00\n          </Button>\n        </Form>\n      </div>\n    </Spin>\n  );\n};\n\nexport default FormCard;\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/InfoPage.js",["71","72","73"],"import React, { useState } from 'react';\n// import BK_1 from '../assets/img/BK_1.png';\nimport img1 from '../assets/img/img1.png';\nimport BK_1 from '../assets/img/BK_1.png';\nimport img2 from '../assets/img/img2.png';\n// import img3 from '../assets/img/img3.jpg';\n// import img4 from '../assets/img/img4.jpg';\nimport img5 from '../assets/img/img5.jpg';\nimport img1full from '../assets/img/img1Full.png';\n// import img6 from '../assets/img/img6.jpg';\n// import img7 from '../assets/img/img7.jpg';\n\nimport image1 from '../assets/img/image1.png';\nimport image2 from '../assets/img/image2.png';\nimport image3 from '../assets/img/image3.png';\n\nimport lock from '../assets/img/lock.png';\nimport { CheckIcon } from '../assets/Icons/CustomIcons';\nimport { Image } from 'antd';\n\nexport default function InfoPage({ setShowRight, showRight }) {\n  const [selectedImage, setSelectedImage] = useState(1);\n  const infoImages = {\n    1: image1,\n    2: image2,\n    3: img5,\n  };\n  const infoImagesTab = {\n    1: img1full,\n    2: img2,\n    3: img5,\n  };\n\n  return (\n    <div className=\"c-infopage-wrapper\">\n      <h2 className=\"c-infopage__title\">SV1 Electric Scooter</h2>\n      <div className=\"c-infopage__subtitle font-weight-bold\">\n        $59/mo.<span> (reserve now for only $1)</span>\n      </div>\n      <div className=\"c-infopage__image-wrapper\">\n        <Image src={infoImages[selectedImage]} alt=\"asd\" />\n      </div>\n      <div className=\"c-infopage__image-selection-wrapper\">\n        {Object.keys(infoImages).map((imgNo, index) => (\n          <div\n            key={index}\n            className={`c-infopage__image-selection-img ${\n              imgNo === selectedImage &&\n              'c-infopage__image-selection-img--active'\n            }`}\n            onClick={() => setSelectedImage(imgNo)}\n          >\n            <img src={infoImagesTab[imgNo]} alt=\"img\" />\n          </div>\n        ))}\n      </div>\n\n      <div className=\"c-infopage__description-title\">Description</div>\n      <p className=\"c-infopage__description\">\n        The SV1 Electrcic Scooter integrates seamlessly with public\n        transportation and comes Quorra-ready. With 15 miles of range per\n        battery, 28 km/h top speed, airless tires and weighing less than 26 lbs\n        – it easily folds so you can travel wherever the road takes you.\n      </p>\n      <div>\n        <div className=\"row\">\n          <div className=\"\">\n            <CheckIcon />\n          </div>\n          <div\n            className=\"pl-2 font-weight-bold\"\n            style={{\n              alignSelf: 'flex-end',\n            }}\n          >\n            $0 set-up fee (normally $50)\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"\">\n            <CheckIcon />\n          </div>\n          <div\n            className=\"pl-2 font-weight-bold\"\n            style={{\n              alignSelf: 'flex-end',\n            }}\n          >\n            month-to-month; cancel anytime\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"\">\n            <CheckIcon />\n          </div>\n          <div\n            className=\"pl-2 font-weight-bold\"\n            style={{\n              alignSelf: 'flex-end',\n            }}\n          >\n            VIP same-day service & maintenance\n          </div>\n        </div>\n      </div>\n      <div className=\"c-infopage__description-title mt-3\">Includes</div>\n\n      <div className=\"c-infopage__promo\">\n        <div className=\"d-flex justify-content-between c-infopage__promo-title\">\n          <div className=\"\">Beyond Premium</div>\n          <div className=\"\">\n            (free for 6 months)\n            {/* (free) */}\n          </div>\n        </div>\n\n        <div>– Mobile App powered by our AI \"Quorra\"</div>\n        <div>– 24/7 VIP Support</div>\n        <div>– Total scooter repair or replacement, no questions asked</div>\n        <div>– Continuous Optimizations & Upgrades</div>\n        <div>– Cancel Anytime</div>\n        <div>– Discount on accesories (coming soon)</div>\n      </div>\n      <div className=\"c-infopage__promo\">\n        <div className=\"d-flex justify-content-between c-infopage__promo-title\">\n          <div className=\"\">Integrated Smart Lock </div>\n          <div className=\"\">(free for new riders)</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-3 p-0 m-auto\">\n            <img src={lock} alt=\"lock\" />\n          </div>\n          <div className=\"col-9\">\n            <div> – GPS tracking; easily find your scooter</div>\n            <div> – Theft protection</div>\n            <div> – Control from the Beyond mobile app</div>\n            <div> – Quorra-ready</div>\n          </div>\n        </div>\n      </div>\n\n      {!showRight && (\n        <div className=\"c-card__btn-wrapper\">\n          {/* c-checkout */}\n          <a href=\"#right-side\">\n            <button\n              className=\"c-card__btn web-view\"\n              onClick={() => {\n                setTimeout(() => setShowRight(true), 350);\n              }}\n              block\n            >\n              Reserve for $1\n            </button>\n            <button\n              className=\"c-card__btn mobile-view\"\n              onClick={() => {\n                // setTimeout(() => setShowRight(true), 350);\n                setShowRight(true);\n              }}\n              block\n            >\n              Reserve for $1\n            </button>\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/PaymentCard.js",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89"],"import React, { useState, useEffect, useRef } from 'react';\nimport payment from '../assets/img/payment.jpg';\nimport { VisaIcon } from '../assets/Icons/CustomIcons';\nimport cvc from '../assets/img/cvc.png';\nimport yourhandle from 'countrycitystatejson';\nimport { AppleFilled } from '@ant-design/icons';\nimport {\n  Button,\n  Divider,\n  Form,\n  Input,\n  Select,\n  message,\n  notification,\n} from 'antd';\nimport InputMask from 'react-input-mask';\nimport api from '../resources/api';\nimport { getConfig } from '@testing-library/react';\nimport { handleSubmitPayment, getAPIkeys } from '../utils/stripe';\nimport {\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n  Elements,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\nimport { Card } from 'antd';\n\nimport { Spin } from 'antd';\nconst { Option } = Select;\n\nconst PaymentCard = (props) => {\n  const { config, setStripeResponse, email } = props;\n  const [loading, setloading] = useState(false);\n\n  const [fName, setFName] = useState('');\n  const [lName, setLName] = useState('');\n\n  const [state, setState] = useState({\n    countryArray: [],\n  });\n\n  const cvcRef = useRef(null);\n\n  const elements = useElements();\n  const stripe = useStripe();\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n  const getCountries = () => {\n    setState({\n      countryArray: yourhandle.getCountries(),\n    });\n  };\n\n  const handleSubmit = (values) => {\n    // const payload = {\n    //   email: values.email,\n    //   name: values.name,\n    // };\n\n    // setStripeResponse('success');\n\n    const payload = {\n      name: fName + ' ' + lName,\n      email: email,\n      stripe: stripe,\n    };\n\n    const _paymentMethod = {\n      type: 'card',\n      card: elements.getElement(CardNumberElement),\n      billing_details: {\n        name: fName + ' ' + lName,\n      },\n    };\n    setloading(true);\n    handleSubmitPayment(\n      _paymentMethod,\n      payload,\n      config,\n      () => setloading(false),\n      () => {\n        setStripeResponse('success');\n        setloading(false);\n      }\n    );\n  };\n\n  return (\n    <Spin spinning={loading} size={'large'}>\n      <Card\n        title={<div className=\"c-card__title\">Payment</div>}\n        bordered={false}\n        // extra={<DeliveryExtraIcon />}\n        className=\"c-card border-0\"\n      >\n        {/* <Form onFinish={handleSubmit} layout=\"vertical\"> */}\n        <div className=\"row c-card-payment\">\n          <div className=\" col-lg-6 col-xs-12\">\n            <CardNumberElement className=\"c-input\" />\n            <div className=\"row c-card-payment__exp\">\n              <div className=\"col-6 py-0\">\n                <input\n                  name=\"fName\"\n                  className=\"c-input\"\n                  placeholder=\"First Name\"\n                  value={fName}\n                  onChange={(e) => setFName(e.target.value)}\n                />\n              </div>\n              <div className=\"col-6 py-0\">\n                <input\n                  name=\"lName\"\n                  className=\"c-input\"\n                  placeholder=\"Last Name\"\n                  value={lName}\n                  onChange={(e) => setLName(e.target.value)}\n                />\n              </div>\n            </div>\n            <div className=\"row c-card-payment__exp\">\n              <div className=\"col-6\">\n                <CardExpiryElement className=\"c-input \" />\n              </div>\n              <div className=\"col-6\">\n                <CardCvcElement className=\"c-input \" ref={cvcRef} />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-lg-6 col-xs-12\">\n            <div className=\"c-card__card-represent\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <VisaIcon />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 c-card__card-represent-number\">\n                  **** **** **** ****\n                </div>\n              </div>\n\n              <div className=\"row c-card__card-represent-key\">\n                <div className=\"col-7\">Card Holder</div>\n                <div className=\"col-3\">Exp</div>\n                <div className=\"col-1\">CVC</div>\n              </div>\n              <div className=\"row c-card__card-represent-value\">\n                <div className=\"col-7\">{fName + ' ' + lName}</div>\n                <div className=\"col-3\">12/21</div>\n                <div className=\"col-1\">***</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* </Form> */}\n      </Card>\n      <div className=\"c-card__btn-wrapper\">\n        <button\n          className=\"c-card__btn web-view\"\n          onClick={() => {\n            window.scrollTo({\n              top: 0,\n              behavior: 'smooth',\n            });\n            handleSubmit();\n          }}\n          block\n        >\n          Finish Order\n        </button>\n        <a href=\"#right-side-success\">\n          <button\n            className=\"c-card__btn mobile-view m-auto\"\n            onClick={handleSubmit}\n            block\n          >\n            Finish Order\n          </button>\n        </a>\n      </div>\n    </Spin>\n  );\n};\nexport default PaymentCard;\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/utils/stripe.js",["90","91"],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/DeliveryCard.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/Navbar.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/ShoppingCard.js",["92"],"import React, { useState } from 'react';\nimport { Card } from 'antd';\nimport { ShoppingExtraIcon, ShippingIcon2 } from '../assets/Icons/CustomIcons';\nimport BK_1 from '../assets/img/img1.png';\nimport logo2 from '../assets/img/logo2.png';\nimport lock from '../assets/img/lock.png';\nexport default function ShoppingCard() {\n  const [quantity, setQuantity] = useState(1);\n  const costSV1 = 1;\n  const taxSV1 = costSV1 * (8.875 / 100);\n  return (\n    <Card\n      title={<div className=\"c-card__title\">Shopping Cart</div>}\n      bordered={false}\n      extra={<ShippingIcon2 />}\n      className=\"c-card border-0\"\n    >\n      <div className=\"row c-card__list\">\n        <div className=\"col-7\">Product Info</div>\n        <div className=\"col-3\">Quantity</div>\n        <div className=\"col-2 text-right\">Price</div>\n      </div>\n      <ShoppingCardItem\n        name={'Reserve Your Scooter (March Delivery)'}\n        image={BK_1}\n        cost={costSV1}\n        quantity={quantity}\n        setQuantity={setQuantity}\n      />\n      <ShoppingCardItem\n        name={'Beyond Premium (free for 6 months)'}\n        image={logo2}\n        cost={0}\n        quantity={quantity}\n        setQuantity={setQuantity}\n        disabled={true}\n      />\n      <ShoppingCardItem\n        name={'GPS Tracker & Lock (free for new riders)'}\n        image={lock}\n        cost={0}\n        quantity={quantity}\n        setQuantity={setQuantity}\n        disabled={true}\n      />\n      <div className=\"row c-card__footer\">\n        <div className=\"col-6\"></div>\n        <div className=\"col-3 c-card__footer-subtotal\">Subtotal</div>\n        <div className=\"col-3  c-card__footer-subtotal-value\">\n          ${(costSV1 * quantity).toFixed(2)}\n        </div>\n        <div className=\"col-6\"></div>\n        <div className=\"col-3 c-card__footer-subtotal\">Tax</div>\n        <div className=\"col-3  c-card__footer-subtotal-value\">\n          ${(taxSV1 * quantity).toFixed(2)}\n        </div>\n        <div className=\"col-6\"></div>\n        <div className=\"col-3 c-card__footer-total\">Total</div>\n        <div className=\"col-3  c-card__footer-total-value\">\n          ${((1 + 1 * taxSV1) * quantity).toFixed(2)}\n        </div>\n        <div className=\"c-card__footer-terms col-12\">\n          <em>\n            * Monhtly subscription of $59 will begin at time of pickup\n            <br />\n            ** Pickup available at Beyond HQ (368 Broadway, New York, NY 10013)\n          </em>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nconst ShoppingCardItem = (props) => {\n  return (\n    <div className=\"row c-card__item\">\n      <div className=\"col-2\">\n        <img\n          src={\n            props.image !== ''\n              ? props.image\n              : 'https://media.istockphoto.com/photos/background-blue-gradient-abstract-picture-id910021106?k=6&m=910021106&s=612x612&w=0&h=dJ1HiBOr6KTiE5c1odNULI8MbYdpDSZAZD_uS_NEGHQ='\n          }\n          alt={props.name}\n          height={50}\n          width={50}\n        />\n      </div>\n      <div className=\"col-5 p-0\">{props.name}</div>\n      <div className=\"col-3\">\n        <InputNum\n          value={props.quantity}\n          setValue={props.setQuantity}\n          disabled={props.disabled}\n        />\n      </div>\n\n      <div className=\"col-2 text-right\">\n        {props.cost === 0 ? 'free' : `$${props.cost.toFixed(2)}`}\n      </div>\n    </div>\n  );\n};\n\nconst InputNum = (props) => {\n  const { value, setValue, disabled } = props;\n  return (\n    <div className={`c-input-num row ${disabled && ' c-input-num--disabled'}`}>\n      <span\n        className={`col-4 `}\n        onClick={() => !disabled && value > 1 && setValue(value - 1)}\n      >\n        -\n      </span>\n      <span\n        className=\"col-4\"\n        style={{\n          alignSelf: 'center',\n        }}\n      >\n        {value}\n      </span>\n      <span\n        className={`col-4 `}\n        onClick={() => !disabled && setValue(value + 1)}\n      >\n        +\n      </span>\n    </div>\n  );\n};\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/resources/api.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/assets/Icons/CustomIcons.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"101","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":27},{"ruleId":"97","severity":1,"message":"102","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":16},{"ruleId":"97","severity":1,"message":"103","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":20},{"ruleId":"97","severity":1,"message":"104","line":12,"column":8,"nodeType":"99","messageId":"100","endLine":12,"endColumn":14},{"ruleId":"97","severity":1,"message":"105","line":12,"column":3,"nodeType":"99","messageId":"100","endLine":12,"endColumn":10},{"ruleId":"97","severity":1,"message":"106","line":13,"column":3,"nodeType":"99","messageId":"100","endLine":13,"endColumn":15},{"ruleId":"97","severity":1,"message":"107","line":16,"column":8,"nodeType":"99","messageId":"100","endLine":16,"endColumn":11},{"ruleId":"97","severity":1,"message":"108","line":17,"column":10,"nodeType":"99","messageId":"100","endLine":17,"endColumn":19},{"ruleId":"97","severity":1,"message":"109","line":18,"column":31,"nodeType":"99","messageId":"100","endLine":18,"endColumn":41},{"ruleId":"97","severity":1,"message":"110","line":23,"column":3,"nodeType":"99","messageId":"100","endLine":23,"endColumn":11},{"ruleId":"97","severity":1,"message":"111","line":72,"column":9,"nodeType":"99","messageId":"100","endLine":72,"endColumn":19},{"ruleId":"97","severity":1,"message":"112","line":76,"column":9,"nodeType":"99","messageId":"100","endLine":76,"endColumn":18},{"ruleId":"97","severity":1,"message":"113","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":12},{"ruleId":"97","severity":1,"message":"114","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":12},{"ruleId":"97","severity":1,"message":"115","line":15,"column":8,"nodeType":"99","messageId":"100","endLine":15,"endColumn":14},{"ruleId":"97","severity":1,"message":"116","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":15},{"ruleId":"97","severity":1,"message":"117","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":11},{"ruleId":"97","severity":1,"message":"118","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":21},{"ruleId":"97","severity":1,"message":"119","line":8,"column":3,"nodeType":"99","messageId":"100","endLine":8,"endColumn":9},{"ruleId":"97","severity":1,"message":"120","line":9,"column":3,"nodeType":"99","messageId":"100","endLine":9,"endColumn":10},{"ruleId":"97","severity":1,"message":"121","line":10,"column":3,"nodeType":"99","messageId":"100","endLine":10,"endColumn":7},{"ruleId":"97","severity":1,"message":"122","line":11,"column":3,"nodeType":"99","messageId":"100","endLine":11,"endColumn":8},{"ruleId":"97","severity":1,"message":"105","line":13,"column":3,"nodeType":"99","messageId":"100","endLine":13,"endColumn":10},{"ruleId":"97","severity":1,"message":"106","line":14,"column":3,"nodeType":"99","messageId":"100","endLine":14,"endColumn":15},{"ruleId":"97","severity":1,"message":"123","line":16,"column":8,"nodeType":"99","messageId":"100","endLine":16,"endColumn":17},{"ruleId":"97","severity":1,"message":"107","line":17,"column":8,"nodeType":"99","messageId":"100","endLine":17,"endColumn":11},{"ruleId":"97","severity":1,"message":"108","line":18,"column":10,"nodeType":"99","messageId":"100","endLine":18,"endColumn":19},{"ruleId":"97","severity":1,"message":"109","line":19,"column":31,"nodeType":"99","messageId":"100","endLine":19,"endColumn":41},{"ruleId":"97","severity":1,"message":"110","line":24,"column":3,"nodeType":"99","messageId":"100","endLine":24,"endColumn":11},{"ruleId":"97","severity":1,"message":"124","line":31,"column":9,"nodeType":"99","messageId":"100","endLine":31,"endColumn":15},{"ruleId":"97","severity":1,"message":"125","line":40,"column":10,"nodeType":"99","messageId":"100","endLine":40,"endColumn":15},{"ruleId":"97","severity":1,"message":"105","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":17},{"ruleId":"97","severity":1,"message":"126","line":13,"column":13,"nodeType":"99","messageId":"100","endLine":13,"endColumn":27},{"ruleId":"97","severity":1,"message":"127","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":27},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'logo1' is defined but never used.","Identifier","unusedVar","'ArrowLeftOutlined' is defined but never used.","'FormCard' is defined but never used.","'DeliveryCard' is defined but never used.","'Navbar' is defined but never used.","'message' is defined but never used.","'notification' is defined but never used.","'api' is defined but never used.","'getConfig' is defined but never used.","'getAPIkeys' is defined but never used.","'Elements' is defined but never used.","'cardSuffix' is assigned a value but never used.","'cvcSuffix' is assigned a value but never used.","'img1' is defined but never used.","'BK_1' is defined but never used.","'image3' is defined but never used.","'payment' is defined but never used.","'cvc' is defined but never used.","'AppleFilled' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'InputMask' is defined but never used.","'Option' is assigned a value but never used.","'state' is assigned a value but never used.","'publishableKey' is assigned a value but never used.","'ShoppingExtraIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]