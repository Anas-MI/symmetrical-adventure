[{"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/index.js":"1","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/App.js":"2","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/reportWebVitals.js":"3","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/formCard.js":"4","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/InfoPage.js":"5","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/PaymentCard.js":"6","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/utils/stripe.js":"7","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/DeliveryCard.js":"8","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/Navbar.js":"9","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/ShoppingCard.js":"10","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/resources/api.js":"11","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/assets/Icons/CustomIcons.js":"12"},{"size":363,"mtime":1611993844846,"results":"13","hashOfConfig":"14"},{"size":4540,"mtime":1614089629796,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611993844847,"results":"16","hashOfConfig":"14"},{"size":5858,"mtime":1612951163277,"results":"17","hashOfConfig":"14"},{"size":7358,"mtime":1614086268227,"results":"18","hashOfConfig":"14"},{"size":5182,"mtime":1614086876399,"results":"19","hashOfConfig":"14"},{"size":3243,"mtime":1613229221861,"results":"20","hashOfConfig":"14"},{"size":2063,"mtime":1612003840159,"results":"21","hashOfConfig":"14"},{"size":1791,"mtime":1612009227242,"results":"22","hashOfConfig":"14"},{"size":4208,"mtime":1614089577389,"results":"23","hashOfConfig":"14"},{"size":327,"mtime":1611993844847,"results":"24","hashOfConfig":"14"},{"size":13346,"mtime":1612617042427,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9acjls",{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/index.js",[],["55","56"],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/App.js",["57","58","59","60","61"],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/reportWebVitals.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/formCard.js",["62","63","64","65","66","67","68","69"],"import React, { useState, useEffect } from 'react';\nimport payment from '../assets/img/payment.jpg';\nimport cvc from '../assets/img/cvc.png';\nimport yourhandle from 'countrycitystatejson';\nimport { AppleFilled } from '@ant-design/icons';\nimport {\n  Button,\n  Divider,\n  Form,\n  Input,\n  Select,\n  message,\n  notification,\n} from 'antd';\nimport InputMask from 'react-input-mask';\nimport api from '../resources/api';\nimport { getConfig } from '@testing-library/react';\nimport { handleSubmitPayment, getAPIkeys } from '../utils/stripe';\nimport {\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n  Elements,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\nimport { Spin } from 'antd';\nconst { Option } = Select;\n\nconst FormCard = ({ config }) => {\n  const [loading, setloading] = useState(false);\n  const [state, setState] = useState({\n    countryArray: [],\n  });\n\n  const elements = useElements();\n  const stripe = useStripe();\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  const getCountries = () => {\n    setState({\n      countryArray: yourhandle.getCountries(),\n    });\n  };\n\n  const handleSubmit = (values) => {\n    const payload = {\n      email: values.email,\n      name: values.name,\n      stripe: stripe\n    }\n    const _paymentMethod = {\n      type: 'card',\n      card: elements.getElement(CardNumberElement),\n      billing_details: {\n        name: values.name,\n      }\n    }\n    setloading(true)\n    handleSubmitPayment(\n      _paymentMethod,\n      payload,\n      config,\n      () => setloading(false)\n    )\n\n  }\n\n  const cardSuffix = (\n    <img src={payment} width=\"110\" alt=\"payment\" />\n  )\n\n  const cvcSuffix = (\n    <img src={cvc} width=\"22px\" style={{ marginRight: '-8px' }} alt=\"cvc\" />\n  );\n\n  return (\n    <Spin spinning={loading} size={'large'}>\n      <div className=\"form-card\">\n        <Button className=\"apple-btn\" block>\n          <AppleFilled /> Pay\n        </Button>\n        <Divider plain style={{ color: '#ACACAC' }}>\n          Or pay with card\n        </Divider>\n        <Form onFinish={handleSubmit} layout=\"vertical\">\n          <Form.Item\n            name=\"email\"\n            label=\"Email\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter valid email address',\n                type: 'email',\n              },\n            ]}\n          >\n            <Input type=\"email\" name=\"email\" />\n          </Form.Item>\n\n          <p>Card information</p>\n          <CardNumberElement className=\"element border\" />\n          <CardExpiryElement className=\"element border\" />\n          <CardCvcElement className=\"element border\" />\n          {/* <Form.Item label=\"Card information\">\n            <Input.Group compact>\n              <Form.Item\n                name=\"cardNo\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter valid 16 digit card number', len: 16 }]}\n              >\n                <Input data-stripe=\"number\" id=\"card-number-element\" name=\"card\" type=\"number\" placeholder=\"1234 1234 1234 1234\" suffix={cardSuffix} />\n              </Form.Item>\n              <Form.Item\n                name=\"expiry\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter card expiry date' }]}\n              >\n                <InputMask data-stripe=\"exp\"  id=\"card-expiry-element\" style={{ width: '50%', height: '32px', padding: '4px 11px' }} name=\"expiry\" mask=\"99/99\" maskChar=\" \" placeholder=\"MM/YY\" />\n              </Form.Item>\n              <Form.Item\n                name=\"CVC\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter CVC code' }]}\n              >\n                <Input data-stripe=\"cvc\"  type=\"password\" id=\"card-cvc-element\" maxLength=\"3\" style={{ width: '50%' }} name=\"CVC\" placeholder=\"CVC\" suffix={cvcSuffix} />\n              </Form.Item>\n            </Input.Group>\n          </Form.Item> */}\n\n          <Form.Item\n            name=\"name\"\n            label=\"Name on card\"\n            style={{ marginTop: '12px' }}\n            rules={[\n              {\n                required: true,\n                message: 'Please enter valid name',\n                pattern: /^[a-zA-Z ]*$/,\n              },\n            ]}\n          >\n            <Input name=\"name\" />\n          </Form.Item>\n\n          <Form.Item label=\"Country or region\">\n            <Input.Group compact>\n              <Form.Item\n                name=\"country\"\n                noStyle\n                rules={[\n                  { required: true, message: 'Please select your country' },\n                ]}\n              >\n                <Select\n                  style={{ width: '100%' }}\n                  name=\"country\"\n                  placeholder=\"Select country\"\n                >\n                  {state.countryArray &&\n                    state.countryArray.length > 0 &&\n                    state.countryArray.map((country, index) => (\n                      <Option key={index} value={country.name}>\n                        {country.name}\n                      </Option>\n                    ))}\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"zip\"\n                noStyle\n                rules={[\n                  { required: true, message: 'Please enter your zip code' },\n                ]}\n              >\n                <InputMask\n                  style={{ height: '32px', padding: '4px 11px' }}\n                  name=\"zip\"\n                  mask=\"999999\"\n                  maskChar=\" \"\n                  placeholder=\"ZIP\"\n                />\n              </Form.Item>\n            </Input.Group>\n          </Form.Item>\n\n          <Button className=\"pay-btn\" htmlType=\"submit\" block>\n            Pay $1.00\n          </Button>\n        </Form>\n      </div>\n    </Spin>\n  );\n};\n\nexport default FormCard;\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/InfoPage.js",["70","71","72","73"],"import React, { useState } from 'react';\n// import BK_1 from '../assets/img/BK_1.png';\nimport img1 from '../assets/img/img1.png';\nimport BK_1 from '../assets/img/BK_1.png';\nimport img2 from '../assets/img/img2.png';\n// import img3 from '../assets/img/img3.jpg';\n// import img4 from '../assets/img/img4.jpg';\nimport img5 from '../assets/img/img5.jpg';\nimport img1full from '../assets/img/img1Full.png';\n// import img6 from '../assets/img/img6.jpg';\n// import img7 from '../assets/img/img7.jpg';\n\nimport image1 from '../assets/img/image1.png';\nimport image2 from '../assets/img/image2.png';\nimport image3 from '../assets/img/image3.png';\n\nimport lock from '../assets/img/lock.png';\nimport { CheckIcon } from '../assets/Icons/CustomIcons';\nimport { Image } from 'antd';\n\nexport default function InfoPage({ setShowRight, showRight }) {\n  const [selectedImage, setSelectedImage] = useState(1);\n  const infoImages = {\n    1: image1,\n    2: image2,\n    3: img5,\n  };\n  const infoImagesTab = {\n    1: img1full,\n    2: img2,\n    3: img5,\n  };\n\n  return (\n    <div className=\"c-infopage-wrapper\">\n      <h2 className=\"c-infopage__title\">SV1 Electric Scooter</h2>\n      <div className=\"c-infopage__subtitle font-weight-bold\">\n        <a href=\"#right-side\">\n          <span\n            className=\" web-view\"\n            onClick={() => {\n              setTimeout(() => setShowRight(true), 350);\n            }}\n            block\n          >\n            Reserve now for $1\n          </span>\n          <span\n            className=\"mobile-view\"\n            onClick={() => {\n              // setTimeout(() => setShowRight(true), 350);\n              setShowRight(true);\n            }}\n            block\n          >\n            Reserve now for $1\n          </span>\n        </a>\n        {'  '}(arrives in March)\n      </div>\n\n      <p className=\"\">$49/mo. plan + Beyond Premiere free for 6 months</p>\n      <div className=\"c-infopage__image-wrapper\">\n        <Image src={infoImages[selectedImage]} alt=\"asd\" />\n      </div>\n      <div className=\"c-infopage__image-selection-wrapper\">\n        {Object.keys(infoImages).map((imgNo, index) => (\n          <div\n            key={index}\n            className={`c-infopage__image-selection-img ${\n              imgNo === selectedImage &&\n              'c-infopage__image-selection-img--active'\n            }`}\n            onClick={() => setSelectedImage(imgNo)}\n          >\n            <img src={infoImagesTab[imgNo]} alt=\"img\" />\n          </div>\n        ))}\n      </div>\n\n      <div className=\"c-infopage__description-title\">Description</div>\n      <p className=\"c-infopage__description\">\n        The SV1 Electrcic Scooter integrates seamlessly with public\n        transportation and comes Quorra-ready. With 15 miles of range per\n        battery, 25 mph top speed, airless tires and weighing less than 26 lbs –\n        it easily folds so you can travel wherever the road takes you. There is\n        a one time set-up fee of $50 for new riders.\n      </p>\n      <div>\n        <div className=\"row\">\n          <div className=\"\">\n            <CheckIcon />\n          </div>\n          <div\n            className=\"pl-2 font-weight-bold\"\n            style={{\n              alignSelf: 'flex-end',\n            }}\n          >\n            {/* $0 set-up fee (normally $50) */}\n            month-to-month; cancel anytime\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"\">\n            <CheckIcon />\n          </div>\n          <div\n            className=\"pl-2 font-weight-bold\"\n            style={{\n              alignSelf: 'flex-end',\n            }}\n          >\n            {/* month-to-month; cancel anytime */}\n            VIP same-day service & maintenance\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"\">\n            <CheckIcon />\n          </div>\n          <div\n            className=\"pl-2 font-weight-bold\"\n            style={{\n              alignSelf: 'flex-end',\n            }}\n          >\n            {/* VIP same-day service & maintenance */}\n            arrives in March\n          </div>\n        </div>\n      </div>\n      <div className=\"c-infopage__description-title mt-3\">Now Includes</div>\n\n      <div className=\"c-infopage__promo\">\n        <div className=\"d-flex justify-content-between c-infopage__promo-title\">\n          <div className=\"\">\n            {/* Beyond Premium */}\n            Beyond Premiere\n          </div>\n          <div className=\"c-infopage__promo-title-right\">\n            {/* (free for 6 months) */}\n            <span>free for 6 months</span>\n            <br /> normally $19/mo.\n            {/* (free) */}\n          </div>\n        </div>\n\n        <div className=\"c-infopage__promo-point\"> * Smart Lock</div>\n        <div className=\"c-infopage__promo-point\"> * 24/7 Support</div>\n        <div className=\"c-infopage__promo-point\">\n          {' '}\n          * Local Maintenance, no questions asked\n        </div>\n        <div className=\"c-infopage__promo-point\">\n          {' '}\n          * Free scooter repair or replacements, no questions asked\n        </div>\n        <div className=\"c-infopage__promo-point\"> * Theft Insurance</div>\n        <div className=\"c-infopage__promo-point\"> * GPS Tracking</div>\n        <div className=\"c-infopage__promo-point\">\n          {' '}\n          * Exclusive member events and rides\n        </div>\n        <div className=\"c-infopage__promo-point\">\n          {' '}\n          * Member-only discounts from top brands (coming soon)\n        </div>\n\n        {/* <div>– Mobile App powered by our AI \"Quorra\"</div>\n        <div>– 24/7 VIP Support</div>\n        <div>– Total scooter repair or replacement, no questions asked</div>\n        <div>– Continuous Optimizations & Upgrades</div>\n        <div>– Cancel Anytime</div>\n        <div>– Discount on accesories (coming soon)</div> */}\n      </div>\n      {/* <div className=\"c-infopage__promo\">\n        <div className=\"d-flex justify-content-between c-infopage__promo-title\">\n          <div className=\"\">Integrated Smart Lock </div>\n          <div className=\"\">(free for new riders)</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-3 p-0 m-auto\">\n            <img src={lock} alt=\"lock\" />\n          </div>\n          <div className=\"col-9\">\n            <div> – GPS tracking; easily find your scooter</div>\n            <div> – Theft protection</div>\n            <div> – Control from the Beyond mobile app</div>\n            <div> – Quorra-ready</div>\n          </div>\n        </div>\n      </div> */}\n\n      {!showRight && (\n        <div className=\"c-card__btn-wrapper\">\n          {/* c-checkout */}\n          <a href=\"#right-side\">\n            <button\n              className=\"c-card__btn web-view\"\n              onClick={() => {\n                setTimeout(() => setShowRight(true), 350);\n              }}\n              block\n            >\n              {/* Reserve for $1 */}\n              Submit\n            </button>\n            <button\n              className=\"c-card__btn mobile-view\"\n              onClick={() => {\n                // setTimeout(() => setShowRight(true), 350);\n                setShowRight(true);\n              }}\n              block\n            >\n              {/* Reserve for $1 */}\n              Submit\n            </button>\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/PaymentCard.js",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89"],"import React, { useState, useEffect, useRef } from 'react';\nimport payment from '../assets/img/payment.jpg';\nimport { VisaIcon } from '../assets/Icons/CustomIcons';\nimport cvc from '../assets/img/cvc.png';\nimport yourhandle from 'countrycitystatejson';\nimport { AppleFilled } from '@ant-design/icons';\nimport {\n  Button,\n  Divider,\n  Form,\n  Input,\n  Select,\n  message,\n  notification,\n} from 'antd';\nimport InputMask from 'react-input-mask';\nimport api from '../resources/api';\nimport { getConfig } from '@testing-library/react';\nimport { handleSubmitPayment, getAPIkeys } from '../utils/stripe';\nimport {\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n  Elements,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\nimport { Card } from 'antd';\n\nimport { Spin } from 'antd';\nconst { Option } = Select;\n\nconst PaymentCard = (props) => {\n  const { config, setStripeResponse, email } = props;\n  const [loading, setloading] = useState(false);\n\n  const [fName, setFName] = useState('');\n  const [lName, setLName] = useState('');\n\n  const [state, setState] = useState({\n    countryArray: [],\n  });\n\n  const cvcRef = useRef(null);\n\n  const elements = useElements();\n  const stripe = useStripe();\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n  const getCountries = () => {\n    setState({\n      countryArray: yourhandle.getCountries(),\n    });\n  };\n\n  const handleSubmit = (values) => {\n    // const payload = {\n    //   email: values.email,\n    //   name: values.name,\n    // };\n\n    // setStripeResponse('success');\n\n    const payload = {\n      name: fName + ' ' + lName,\n      email: email,\n      stripe: stripe,\n    };\n\n    const _paymentMethod = {\n      type: 'card',\n      card: elements.getElement(CardNumberElement),\n      billing_details: {\n        name: fName + ' ' + lName,\n      },\n    };\n    setloading(true);\n    handleSubmitPayment(\n      _paymentMethod,\n      payload,\n      config,\n      () => setloading(false),\n      () => {\n        setStripeResponse('success');\n        setloading(false);\n      }\n    );\n  };\n\n  return (\n    <Spin spinning={loading} size={'large'}>\n      <Card\n        title={<div className=\"c-card__title\">Payment</div>}\n        bordered={false}\n        // extra={<DeliveryExtraIcon />}\n        className=\"c-card border-0\"\n      >\n        {/* <Form onFinish={handleSubmit} layout=\"vertical\"> */}\n        <div className=\"row c-card-payment\">\n          <div className=\" col-lg-6 col-xs-12\">\n            <CardNumberElement className=\"c-input\" />\n            <div className=\"row c-card-payment__exp\">\n              <div className=\"col-6 py-0\">\n                <input\n                  name=\"fName\"\n                  className=\"c-input\"\n                  placeholder=\"First Name\"\n                  value={fName}\n                  onChange={(e) => setFName(e.target.value)}\n                />\n              </div>\n              <div className=\"col-6 py-0\">\n                <input\n                  name=\"lName\"\n                  className=\"c-input\"\n                  placeholder=\"Last Name\"\n                  value={lName}\n                  onChange={(e) => setLName(e.target.value)}\n                />\n              </div>\n            </div>\n            <div className=\"row c-card-payment__exp\">\n              <div className=\"col-6\">\n                <CardExpiryElement className=\"c-input \" />\n              </div>\n              <div className=\"col-6\">\n                <CardCvcElement className=\"c-input \" ref={cvcRef} />\n              </div>\n            </div>\n          </div>\n          <div className=\" col-lg-6 col-xs-12\">\n            <div className=\"c-card__card-represent\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <VisaIcon />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-12 c-card__card-represent-number\">\n                  **** **** **** ****\n                </div>\n              </div>\n\n              <div className=\"row c-card__card-represent-key\">\n                <div className=\"col-7\">Card Holder</div>\n                <div className=\"col-3\">Exp</div>\n                <div className=\"col-1\">CVC</div>\n              </div>\n              <div className=\"row c-card__card-represent-value\">\n                <div className=\"col-7\">{fName + ' ' + lName}</div>\n                <div className=\"col-3\">12/21</div>\n                <div className=\"col-1\">***</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* </Form> */}\n      </Card>\n      <div className=\"c-card__btn-wrapper\">\n        <button\n          className=\"c-card__btn web-view\"\n          onClick={() => {\n            window.scrollTo({\n              top: 0,\n              behavior: 'smooth',\n            });\n            handleSubmit();\n          }}\n          block\n        >\n          Submit\n        </button>\n        <a href=\"#right-side-success\">\n          <button\n            className=\"c-card__btn mobile-view m-auto\"\n            onClick={handleSubmit}\n            block\n          >\n            Submit\n          </button>\n        </a>\n      </div>\n    </Spin>\n  );\n};\nexport default PaymentCard;\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/utils/stripe.js",["90","91","92"],"import api from '../resources/api';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { message, notification } from 'antd';\n\nexport const getAPIkeys = async () => {\n  const result = await api.get(`/stripe/setup`);\n  return result.data;\n};\n\nexport const stripePromise = async () => {\n  const res = await getAPIkeys();\n  if (res.data) {\n    const { publishableKey } = res.data;\n    return loadStripe('pk_test_1XPhRvBHCislCDxFaYm3HR97');\n  }\n  loadStripe('pk_test_1XPhRvBHCislCDxFaYm3HR97');\n};\n\nexport const handleSubmitPayment = async (\n  paymentMethods,\n  payload,\n  config,\n  cb,\n  onSuccess\n) => {\n  const { stripe } = payload;\n  if (!config || !stripe) {\n    return;\n  }\n  try {\n    const { error, paymentMethod } = await stripe.createPaymentMethod(\n      paymentMethods\n    );\n    if (error || !paymentMethod) {\n      notification.error({\n        message: error?.message || 'Something is not right...',\n      });\n      cb();\n      throw Error(error?.message || 'Something is not right...');\n    }\n    const paymentId = paymentMethod.id;\n\n    //gettoing users\n    let beyond_users = JSON.parse(localStorage.getItem('beyond_users'));\n    let alreadyUsers = [];\n    if (beyond_users) {\n      alreadyUsers = beyond_users.filter(\n        (item) => item.email === payload.email\n      );\n    } else {\n      beyond_users = []\n    }\n\n    if (alreadyUsers.length === 0 || beyond_users.length == 0) {\n      api\n        .post(`/stripe/customer`, { email: payload.email, name: payload.name })\n        .then(async function (res) {\n          const id = res.data.customerId;\n          const _finalpayload = {\n            customerId: id,\n            paymentId,\n            priceId: config.priceId,\n          };\n\n          beyond_users.push({ email: payload.email, customerId: id });\n          localStorage.setItem('beyond_users', JSON.stringify(beyond_users));\n\n          api\n            .post(`/stripe/checkout`, _finalpayload)\n            .then((res) => {\n              cb();\n              notification.success({ message: 'Payment successfull.' });\n              onSuccess();\n              //const { clientSecret } = res.data\n            })\n            .catch((err) => {\n              cb();\n              notification.error({ message: 'Something went wrong' });\n            });\n        })\n        .catch((err) => {\n          cb();\n          notification.error({\n            message:\n              err.response && err.response.data && err.response.data.message\n                ? err.response.data.message\n                : 'Something went wrong',\n          });\n        });\n    } else {\n      const _finalpayload = {\n        customerId: alreadyUsers[0].customerId,\n        paymentId,\n        priceId: config.priceId,\n      };\n\n      api\n        .post(`/stripe/checkout`, _finalpayload)\n        .then((res) => {\n          cb();\n          notification.success({ message: 'Payment successfull.' });\n          onSuccess();\n          //const { clientSecret } = res.data\n        })\n        .catch((err) => {\n          cb();\n          notification.error({ message: 'Something went wrong' });\n        });\n    }\n  } catch (error) {\n    console.log(error)\n    // message.error(error.message())\n    // Let the user know that something went wrong here...\n  }\n};\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/DeliveryCard.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/Navbar.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/ShoppingCard.js",["93","94","95"],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/resources/api.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/assets/Icons/CustomIcons.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"104","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":27},{"ruleId":"100","severity":1,"message":"105","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"106","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":20},{"ruleId":"100","severity":1,"message":"107","line":12,"column":8,"nodeType":"102","messageId":"103","endLine":12,"endColumn":14},{"ruleId":"100","severity":1,"message":"108","line":12,"column":3,"nodeType":"102","messageId":"103","endLine":12,"endColumn":10},{"ruleId":"100","severity":1,"message":"109","line":13,"column":3,"nodeType":"102","messageId":"103","endLine":13,"endColumn":15},{"ruleId":"100","severity":1,"message":"110","line":16,"column":8,"nodeType":"102","messageId":"103","endLine":16,"endColumn":11},{"ruleId":"100","severity":1,"message":"111","line":17,"column":10,"nodeType":"102","messageId":"103","endLine":17,"endColumn":19},{"ruleId":"100","severity":1,"message":"112","line":18,"column":31,"nodeType":"102","messageId":"103","endLine":18,"endColumn":41},{"ruleId":"100","severity":1,"message":"113","line":23,"column":3,"nodeType":"102","messageId":"103","endLine":23,"endColumn":11},{"ruleId":"100","severity":1,"message":"114","line":72,"column":9,"nodeType":"102","messageId":"103","endLine":72,"endColumn":19},{"ruleId":"100","severity":1,"message":"115","line":76,"column":9,"nodeType":"102","messageId":"103","endLine":76,"endColumn":18},{"ruleId":"100","severity":1,"message":"116","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":12},{"ruleId":"100","severity":1,"message":"117","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":12},{"ruleId":"100","severity":1,"message":"118","line":15,"column":8,"nodeType":"102","messageId":"103","endLine":15,"endColumn":14},{"ruleId":"100","severity":1,"message":"119","line":17,"column":8,"nodeType":"102","messageId":"103","endLine":17,"endColumn":12},{"ruleId":"100","severity":1,"message":"120","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":15},{"ruleId":"100","severity":1,"message":"121","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":11},{"ruleId":"100","severity":1,"message":"122","line":6,"column":10,"nodeType":"102","messageId":"103","endLine":6,"endColumn":21},{"ruleId":"100","severity":1,"message":"123","line":8,"column":3,"nodeType":"102","messageId":"103","endLine":8,"endColumn":9},{"ruleId":"100","severity":1,"message":"124","line":9,"column":3,"nodeType":"102","messageId":"103","endLine":9,"endColumn":10},{"ruleId":"100","severity":1,"message":"125","line":10,"column":3,"nodeType":"102","messageId":"103","endLine":10,"endColumn":7},{"ruleId":"100","severity":1,"message":"126","line":11,"column":3,"nodeType":"102","messageId":"103","endLine":11,"endColumn":8},{"ruleId":"100","severity":1,"message":"108","line":13,"column":3,"nodeType":"102","messageId":"103","endLine":13,"endColumn":10},{"ruleId":"100","severity":1,"message":"109","line":14,"column":3,"nodeType":"102","messageId":"103","endLine":14,"endColumn":15},{"ruleId":"100","severity":1,"message":"127","line":16,"column":8,"nodeType":"102","messageId":"103","endLine":16,"endColumn":17},{"ruleId":"100","severity":1,"message":"110","line":17,"column":8,"nodeType":"102","messageId":"103","endLine":17,"endColumn":11},{"ruleId":"100","severity":1,"message":"111","line":18,"column":10,"nodeType":"102","messageId":"103","endLine":18,"endColumn":19},{"ruleId":"100","severity":1,"message":"112","line":19,"column":31,"nodeType":"102","messageId":"103","endLine":19,"endColumn":41},{"ruleId":"100","severity":1,"message":"113","line":24,"column":3,"nodeType":"102","messageId":"103","endLine":24,"endColumn":11},{"ruleId":"100","severity":1,"message":"128","line":31,"column":9,"nodeType":"102","messageId":"103","endLine":31,"endColumn":15},{"ruleId":"100","severity":1,"message":"129","line":40,"column":10,"nodeType":"102","messageId":"103","endLine":40,"endColumn":15},{"ruleId":"100","severity":1,"message":"108","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":17},{"ruleId":"100","severity":1,"message":"130","line":13,"column":13,"nodeType":"102","messageId":"103","endLine":13,"endColumn":27},{"ruleId":"131","severity":1,"message":"132","line":54,"column":58,"nodeType":"133","messageId":"134","endLine":54,"endColumn":60},{"ruleId":"100","severity":1,"message":"135","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":27},{"ruleId":"100","severity":1,"message":"136","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":13},{"ruleId":"100","severity":1,"message":"119","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":12},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'logo1' is defined but never used.","Identifier","unusedVar","'ArrowLeftOutlined' is defined but never used.","'FormCard' is defined but never used.","'DeliveryCard' is defined but never used.","'Navbar' is defined but never used.","'message' is defined but never used.","'notification' is defined but never used.","'api' is defined but never used.","'getConfig' is defined but never used.","'getAPIkeys' is defined but never used.","'Elements' is defined but never used.","'cardSuffix' is assigned a value but never used.","'cvcSuffix' is assigned a value but never used.","'img1' is defined but never used.","'BK_1' is defined but never used.","'image3' is defined but never used.","'lock' is defined but never used.","'payment' is defined but never used.","'cvc' is defined but never used.","'AppleFilled' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'InputMask' is defined but never used.","'Option' is assigned a value but never used.","'state' is assigned a value but never used.","'publishableKey' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ShoppingExtraIcon' is defined but never used.","'logo2' is defined but never used.","no-global-assign","no-unsafe-negation"]