[{"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/index.js":"1","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/App.js":"2","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/reportWebVitals.js":"3","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/utils/stripe.js":"4","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/formCard.js":"5","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/resources/api.js":"6","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/Navbar.js":"7","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/assets/Icons/CustomIcons.js":"8","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/ShoppingCard.js":"9","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/DeliveryCard.js":"10"},{"size":363,"mtime":1611993844846,"results":"11","hashOfConfig":"12"},{"size":4051,"mtime":1612001311825,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611993844847,"results":"14","hashOfConfig":"12"},{"size":1251,"mtime":1611993844849,"results":"15","hashOfConfig":"12"},{"size":6210,"mtime":1611993844846,"results":"16","hashOfConfig":"12"},{"size":327,"mtime":1611993844847,"results":"17","hashOfConfig":"12"},{"size":1797,"mtime":1612006725517,"results":"18","hashOfConfig":"12"},{"size":8403,"mtime":1611998781447,"results":"19","hashOfConfig":"12"},{"size":2182,"mtime":1612006982283,"results":"20","hashOfConfig":"12"},{"size":2063,"mtime":1612003840159,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"9acjls",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/index.js",[],["46","47"],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/App.js",["48","49"],"import React, { useEffect, useState } from 'react';\nimport logo1 from './assets/img/logo1.png';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport FormCard from './components/formCard';\nimport ShoppingCard from './components/ShoppingCard';\nimport DeliveryCard from './components/DeliveryCard';\nimport { getAPIkeys } from './utils/stripe';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Navbar from './components/Navbar';\n\nconst App = () => {\n  const [stripePromise, setstripePromise] = useState(\n    loadStripe('pk_test_1XPhRvBHCislCDxFaYm3HR97')\n  );\n\n  const [config, setconfig] = useState({\n    publishableKey: 'pk_test_1XPhRvBHCislCDxFaYm3HR97',\n    productID: '',\n    priceID: '',\n    PreOrderPriceId: '',\n  });\n\n  const getConfigKeys = async () => {\n    const result = await getAPIkeys();\n    if (result) {\n      setconfig(result);\n      setstripePromise(loadStripe(result.publishableKey));\n    }\n  };\n\n  useEffect(() => {\n    getConfigKeys();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <section id=\"into-section\">\n        <div className=\"row section-row\">\n          {/* <div className=\"col-lg-6 left-side\">\n            <div className=\"d-flex justify-content-around align-items-center h-100 flex-column\">\n              <div className=\"d-flex flex-column\">\n                <div className=\"d-flex justify-content-center align-items-center\">\n                  <ArrowLeftOutlined style={{ color: '#A7A8AC' }} />\n                  <img\n                    src={logo1}\n                    width=\"30\"\n                    alt=\"logo\"\n                    style={{ margin: '0 16px' }}\n                  />\n                  <p\n                    className=\"text-uppercase fw-bold m-0\"\n                    style={{\n                      fontSize: '10px',\n                      fontWeight: '600',\n                      color: '#8D5719',\n                      borderRadius: '4px',\n                      background: '#F8E09C',\n                      padding: '3px 9px',\n                    }}\n                  >\n                    Test mode\n                  </p>\n                </div>\n                <div className=\"mt-4\" style={{ marginLeft: '60px' }}>\n                  <h6 style={{ color: '#A7A8AC' }}>Scooter reservation</h6>\n                  <h1 style={{ color: '#fff', fontWeight: '600' }}>$1.00</h1>\n                </div>\n              </div>\n\n              <div className=\"justify-content-center align-items-center w-100 copyrights\">\n                <p style={{ color: '#626367', fontSize: '12px' }}>\n                  Powered by\n                  <span style={{ fontWeight: '600' }}>stripe</span>\n                </p>\n                <p style={{ color: '#626367' }} className=\"ml-2 mr-2\">\n                  |\n                </p>\n                <p style={{ color: '#626367', fontSize: '12px' }}>\n                  Terms Privacy\n                </p>\n              </div>\n            </div>\n          </div> */}\n          <div className=\"col-lg-6 left-side\">\n            <ShoppingCard />\n            <DeliveryCard />\n          </div>\n\n          <div className=\"col-lg-6 right-side\">\n            <div className=\"d-flex align-items-center h-100 right-side-section\">\n              {console.log(config)}\n              <Elements stripe={stripePromise}>\n                <FormCard config={config} />\n              </Elements>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row mobile-copyrights\">\n          <div className=\"d-flex justify-content-center align-items-center w-100\">\n            <p style={{ color: '#626367', fontSize: '12px' }}>\n              Powered by\n              <span style={{ fontWeight: '600' }}>stripe</span>\n            </p>\n            <p style={{ color: '#626367' }} className=\"ml-2 mr-2\">\n              |\n            </p>\n            <p style={{ color: '#626367', fontSize: '12px' }}>Terms Privacy</p>\n          </div>\n        </div>\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/reportWebVitals.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/utils/stripe.js",["50","51","52"],"\nimport api from '../resources/api';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { message, notification } from 'antd';\n\nexport const getAPIkeys = async () => {\n  const result = await api.get(`/stripe/setup`)\n  return result.data\n}\n\nexport const stripePromise = async () => {\n  const res = await getAPIkeys()\n  if (res.data) {\n    const { publishableKey } = res.data\n    return loadStripe('pk_test_1XPhRvBHCislCDxFaYm3HR97')\n  }\n  loadStripe('pk_test_1XPhRvBHCislCDxFaYm3HR97')\n};\n\n\nexport const handleSubmitPayment = async (paymentMethods, payload, config) => {\n  const { stripe, customerID } = payload\n  if (!config || !stripe) {\n    return;\n  }\n  try {\n    const { error, paymentMethod } = await stripe.createPaymentMethod(paymentMethods);\n    if (error || !paymentMethod) {\n      notification.error({ message: error?.message || 'Something is not right...' })\n      throw Error(error?.message || 'Something is not right...');\n    }\n    const paymentID = paymentMethod.id;\n    notification.success({ message: 'Payment successfull' })\n    return paymentID\n  } catch (error) {\n    notification.error({ message: 'Something went wrong' })\n    // message.error(error.message())\n    // Let the user know that something went wrong here...\n  }\n};","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/formCard.js",["53","54","55","56","57","58"],"import React, { useState, useEffect } from 'react';\nimport payment from '../assets/img/payment.jpg';\nimport cvc from '../assets/img/cvc.png';\nimport yourhandle from 'countrycitystatejson';\nimport { AppleFilled } from '@ant-design/icons';\nimport { Button, Divider, Form, Input, Select, message, notification } from 'antd';\nimport InputMask from 'react-input-mask';\nimport api from '../resources/api';\nimport { getConfig } from '@testing-library/react';\nimport { handleSubmitPayment, getAPIkeys } from '../utils/stripe';\nimport {\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n  Elements,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js';\nimport { Spin } from 'antd';\nconst { Option } = Select\n\nconst FormCard = ({ config }) => {\n  const [loading, setloading] = useState(false)\n  const [state, setState] = useState({\n    countryArray: []\n  });\n\n  const elements = useElements();\n  const stripe = useStripe();\n\n  useEffect(() => {\n    getCountries();\n  }, [])\n\n  const getCountries = () => {\n    setState({\n      countryArray: yourhandle.getCountries()\n    })\n  }\n\n  const handleSubmit = (values) => {\n    const payload = {\n      email: values.email,\n      name: values.name\n    }\n    setloading(true)\n    api.post(`/stripe/customer`, payload)\n      .then(async function (res) {\n        const _paymentMethod = {\n          type: 'card',\n          card: elements.getElement(CardNumberElement),\n          billing_details: {\n            name: values.name,\n          }\n        }\n        const { customerID } = res.data\n        const _payload = {\n          customerID: customerID,\n          stripe: stripe\n        }\n        const paymentID = await handleSubmitPayment(\n          _paymentMethod,\n          _payload,\n          config\n        )\n\n        const _finalpayload = {\n          customerID, paymentID\n        }\n\n        api.post(`/stripe/subscription`, _finalpayload)\n          .then(res => {\n            setloading(false);\n            console.log(res)\n          })\n          .catch(err => {\n            setloading(false);\n            notification.error({ message: 'Something went wrong' });\n            console.log(err)\n          })\n\n      }).catch(err => {\n        console.log(err.response.data.message)\n        setloading(false);\n        notification.error({ message: err.response.data && err.response.data.message ? err.response.data.message : 'Something went wrong' });\n        console.log(err)\n      })\n  }\n\n  const cardSuffix = (\n    <img src={payment} width=\"110\" alt=\"payment\" />\n  )\n\n  const cvcSuffix = (\n    <img src={cvc} width=\"22px\" style={{ marginRight: '-8px' }} alt=\"cvc\" />\n  )\n\n  return (\n    <Spin spinning={loading} size={'large'}>\n      <div className=\"form-card\">\n        <Button className=\"apple-btn\" block><AppleFilled /> Pay</Button>\n        <Divider plain style={{ color: '#ACACAC' }}>Or pay with card</Divider>\n        <Form onFinish={handleSubmit} layout=\"vertical\">\n          <Form.Item\n            name=\"email\"\n            label=\"Email\"\n            rules={[{ required: true, message: 'Please enter valid email address', type: 'email' }]}>\n            <Input type=\"email\" name=\"email\" />\n          </Form.Item>\n\n          <p>Card information</p>\n          <CardNumberElement className=\"element border\" />\n          <CardExpiryElement className=\"element border\" />\n          <CardCvcElement className=\"element border\" />\n          {/* <Form.Item label=\"Card information\">\n            <Input.Group compact>\n              <Form.Item\n                name=\"cardNo\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter valid 16 digit card number', len: 16 }]}\n              >\n                <Input data-stripe=\"number\" id=\"card-number-element\" name=\"card\" type=\"number\" placeholder=\"1234 1234 1234 1234\" suffix={cardSuffix} />\n              </Form.Item>\n              <Form.Item\n                name=\"expiry\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter card expiry date' }]}\n              >\n                <InputMask data-stripe=\"exp\"  id=\"card-expiry-element\" style={{ width: '50%', height: '32px', padding: '4px 11px' }} name=\"expiry\" mask=\"99/99\" maskChar=\" \" placeholder=\"MM/YY\" />\n              </Form.Item>\n              <Form.Item\n                name=\"CVC\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter CVC code' }]}\n              >\n                <Input data-stripe=\"cvc\"  type=\"password\" id=\"card-cvc-element\" maxLength=\"3\" style={{ width: '50%' }} name=\"CVC\" placeholder=\"CVC\" suffix={cvcSuffix} />\n              </Form.Item>\n            </Input.Group>\n          </Form.Item> */}\n\n          <Form.Item\n            name=\"name\"\n            label=\"Name on card\"\n            style={{ marginTop: '12px' }}\n            rules={[{ required: true, message: 'Please enter valid name', pattern: /^[a-zA-Z ]*$/ }]}>\n            <Input name=\"name\" />\n          </Form.Item>\n\n          <Form.Item label=\"Country or region\">\n            <Input.Group compact>\n              <Form.Item\n                name=\"country\"\n                noStyle\n                rules={[{ required: true, message: 'Please select your country' }]}\n              >\n                <Select style={{ width: '100%' }} name=\"country\" placeholder=\"Select country\">\n                  {\n                    state.countryArray &&\n                    state.countryArray.length > 0 &&\n                    state.countryArray.map((country, index) => (\n                      <Option key={index} value={country.name}>{country.name}</Option>\n                    ))\n                  }\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"zip\"\n                noStyle\n                rules={[{ required: true, message: 'Please enter your zip code' }]}\n              >\n                <InputMask style={{ height: '32px', padding: '4px 11px' }} name=\"zip\" mask=\"999999\" maskChar=\" \" placeholder=\"ZIP\" />\n              </Form.Item>\n            </Input.Group>\n          </Form.Item>\n\n          <Button className=\"pay-btn\" htmlType=\"submit\" block>Pay $1.00</Button>\n        </Form>\n      </div>\n\n    </Spin>\n  )\n}\n\nexport default FormCard;\n","/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/resources/api.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/Navbar.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/assets/Icons/CustomIcons.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/ShoppingCard.js",[],"/Users/akshataggarwal/Documents/Coding Files/symmetrical-adventure/src/components/DeliveryCard.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":13},{"ruleId":"63","severity":1,"message":"67","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":27},{"ruleId":"63","severity":1,"message":"68","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":17},{"ruleId":"63","severity":1,"message":"69","line":14,"column":13,"nodeType":"65","messageId":"66","endLine":14,"endColumn":27},{"ruleId":"63","severity":1,"message":"70","line":22,"column":19,"nodeType":"65","messageId":"66","endLine":22,"endColumn":29},{"ruleId":"63","severity":1,"message":"68","line":6,"column":48,"nodeType":"65","messageId":"66","endLine":6,"endColumn":55},{"ruleId":"63","severity":1,"message":"71","line":9,"column":10,"nodeType":"65","messageId":"66","endLine":9,"endColumn":19},{"ruleId":"63","severity":1,"message":"72","line":10,"column":31,"nodeType":"65","messageId":"66","endLine":10,"endColumn":41},{"ruleId":"63","severity":1,"message":"73","line":15,"column":3,"nodeType":"65","messageId":"66","endLine":15,"endColumn":11},{"ruleId":"63","severity":1,"message":"74","line":90,"column":9,"nodeType":"65","messageId":"66","endLine":90,"endColumn":19},{"ruleId":"63","severity":1,"message":"75","line":94,"column":9,"nodeType":"65","messageId":"66","endLine":94,"endColumn":18},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'logo1' is defined but never used.","Identifier","unusedVar","'ArrowLeftOutlined' is defined but never used.","'message' is defined but never used.","'publishableKey' is assigned a value but never used.","'customerID' is assigned a value but never used.","'getConfig' is defined but never used.","'getAPIkeys' is defined but never used.","'Elements' is defined but never used.","'cardSuffix' is assigned a value but never used.","'cvcSuffix' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]